// This is an autogenerated file, any edits which you make here will be lost!
package schemas

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"github.com/deepmap/oapi-codegen/pkg/runtime"
	"github.com/getkin/kin-openapi/openapi3"
	"net/http"
	"strings"
)

// Type definition for component schema "AnyType1"
type AnyType1 interface{}

// Type definition for component schema "AnyType2"
type AnyType2 interface{}

// Type definition for component schema "CustomStringType"
type CustomStringType string

// Type definition for component schema "GenericObject"
type GenericObject map[string]interface{}

type ServerInterface interface {
}

// A client which conforms to the OpenAPI3 specification for this service. The
// server should be fully qualified with shema and server, ie,
// https://deepmap.com.
type Client struct {
	Server string
	Client http.Client
}

type ServerInterfaceWrapper struct {
	Handler ServerInterface
}

func RegisterHandlers(router runtime.EchoRouter, si ServerInterface) {

}

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/zSOMW/DIBCF/4r1ZkTidmOrOnTsEG9VB4LPNZUNiDtHihD/vYKk291933u6Ahf3FAMF",
	"YZgCdivtto9v4T7dE40wpar/7aWRmdhln8THAINp9TzwGo9tHq402DD4IJQX66hUVIX3gyXuF8k+/LSO",
	"VrHEvFuBgesQCtIJuGst9kGBsnef119y0jJPIz4OtVYFH5bYkZetsYlYhgvlG2Uo3Cjz48dRn/W5lcZE",
	"wSYPg1d91iMUuNsM81Vw5A0Gq0gyp9NTFWLRM1HabdLWo37XvwAAAP//TwyLjzUBAAA=",
}

// Returns the Swagger specification corresponding to the generated code
// in this file.
func GetSwagger() (*openapi3.Swagger, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %s", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %s", err)
	}

	swagger, err := openapi3.NewSwaggerLoader().LoadSwaggerFromData(buf.Bytes())
	if err != nil {
		return nil, fmt.Errorf("error loading Swagger: %s", err)
	}
	return swagger, nil
}

